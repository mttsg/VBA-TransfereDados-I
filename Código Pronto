Option Explicit

Private Sub Botão1_Clique()

'Essa função faz com que o usuário não veja o excel trabalhando para gerar a lista. Só aparecerá algo na tela quando tudo estiver pronto para que não fique poluido e dê um toque mais profissional'
Application.ScreenUpdating = False

'Definição das variáveis para o código que transfere dados de planilhas para uma única planilha '
Dim w                   As Worksheet
Dim wnew                As Workbook
Dim ArqParaAbrir        As Variant
Dim A                   As Integer
Dim NomeArquivo         As String

'Início código transf arquivos de pasta para pasta

Dim FSO As Object
Dim sourcePath As String
Dim destinationPath As String
Dim fileExtn As String


 'Aqui identificamos o caminho que o excel irá percorrer para acessar os arquivos da pasta que contém as planilhas Excel'
sourcePath = "C:\Users\Matteo\Documents\Pasta Fonte"

'Aqui identificamos o caminho que o excel irá percorrer para acessar a pasta para onde os arquivos serão transferidos '
destinationPath = "C:\Users\Matteo\Documents\Pasta Destino"

'Aqui definimos que os arquivos transferidos de uma pasta para outra serão aqueles que começam com "20" e contém ".xls" no nome'
'Note que o asterisco significa que existem outros caracteres após o "20", porém não nos interessa identifica-los. Se a planilha começar com "20" já saberemos que se trata de um arquivo do ano de 2020 e isso que estamos procurando'
'Note também que o asterisco é utilizado após o ".xls" para que arquivos planilha Excel de diferentes tipos possam ser transferidos. Arquivos xlsx, xlsm etc...'
fileExtn = "20*.xls*"


'Essa condição testa se o caminho do arquivo é verdadeiro e se for ele adiociona uma barra no final do seu nome para que ele seja acessível'
If Right(sourcePath, 1) <> "\" Then
sourcePath = sourcePath & "\"
End If

'Essa é uma função especifica que cria um objeto a ser utilizado'

Set FSO = CreateObject("scripting.filesystemobject")


 'Caso a pasta indicada no endereço da pasta não exista uma mensagem paarecerá dizendo que a pasta não existe'
If FSO.FolderExists(sourcePath) = False Then
MsgBox ("destinationPath & does not exist")
Exit Sub
End If

'Caso a pasta indicada no endereço da pasta não exista uma mensagem paarecerá dizendo que a pasta não existe'
If FSO.FolderExists(destinationPath) = False Then
MsgBox ("sourcePath &  does not exist")
Exit Sub
End If



 'Caso a pasta indicada no endereço da pasta  exista os arquivos serão transferidos de uma para outra e uma mensagem aparecerá na tela dizendo que foram copiados'
FSO.CopyFile Source:=sourcePath & fileExtn, Destination:=destinationPath
MsgBox "Your files have been copied from " & sourcePath & " to " & destinationPath





'-------------------------------


'Capturar arquivos para tratamento'

ArqParaAbrir = Application.GetOpenFilename("Arquivo do Excel (*.xlsx), *.xl*", _
Title:="Escolha o arquivo a ser importado", _
MultiSelect:=True)

If Not IsArray(ArqParaAbrir) Then

    If ArqParaAbrir = "" Or ArqParaAbrir = False Then
        MsgBox "Processo abortado, nenhum arquivo escolhido", vbOKOnly, "Processo Abortado"
        Exit Sub
    End If
    
    
End If

'Começa a importação dos dados'
 Set w = Sheets("Planilha1")
 
 w.Range("A3:AV108576").Delete
 
 w.Select
 
 'Loop para importação dos arquivos'
 
 For A = LBound(ArqParaAbrir) To UBound(ArqParaAbrir)
    NomeArquivo = ArqParaAbrir(A)
    
    Application.Workbooks.Open (NomeArquivo)
    Set wnew = ActiveWorkbook
    
    Sheets("Saidas1").Activate

    
    
    ActiveSheet.Range("A3:AV5").Select
    Selection.Copy Destination:=w.Cells(w.Rows.Count, 1).End(xlUp).Offset(1, 0)
    
        ActiveWorkbook.Close savechanges:=False
        
    Application.DisplayAlerts = False
    w.Cells(w.Rows.Count, 1).End(xlUp).Offset(1, 0).Select
    
        
        
Next A
    

Application.ScreenUpdating = True

MsgBox "Processo concluído!"



End Sub
